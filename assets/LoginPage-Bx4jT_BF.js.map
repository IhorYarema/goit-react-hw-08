{"version":3,"file":"LoginPage-Bx4jT_BF.js","sources":["../../src/components/LoginForm/LoginForm.jsx","../../src/pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport css from './LoginForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('Required field'),\n    password: Yup.string()\n      .min(6, 'Minimum 6 characters')\n      .required('Required field'),\n  });\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await dispatch(logIn(values)).unwrap();\n      resetForm();\n    } catch (error) {\n      console.log('login error:', error);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.label}>Email</label>\n          <Field type=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" className={css.error} />\n\n          <label className={css.label}>Password </label>\n          <Field type=\"password\" name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"div\" className={css.error} />\n\n          <button type=\"submit\" disabled={isSubmitting} className={css.button}>\n            Log In\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import css from './LoginPage.module.css';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <title className={css.title}>Login</title>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","validationSchema","Yup.object","Yup.string","handleSubmit","values","resetForm","logIn","error","jsx","Formik","isSubmitting","jsxs","Form","css","Field","ErrorMessage","LoginPage","Fragment"],"mappings":"wMAMaA,EAAY,IAAM,CAC7B,MAAMC,EAAWC,EAAY,EAEvBC,EAAmBC,EAAW,CAClC,MAAOC,EAAW,EACf,MAAM,sBAAsB,EAC5B,SAAS,gBAAgB,EAC5B,SAAUA,EAAW,EAClB,IAAI,EAAG,sBAAsB,EAC7B,SAAS,gBAAgB,CAAA,CAC7B,EAEKC,EAAe,MAAOC,EAAQ,CAAE,UAAAC,KAAgB,CAChD,GAAA,CACF,MAAMP,EAASQ,EAAMF,CAAM,CAAC,EAAE,OAAO,EAC3BC,EAAA,QACHE,EAAO,CACN,QAAA,IAAI,eAAgBA,CAAK,CAAA,CAErC,EAGE,OAAAC,EAAA,IAACC,EAAA,CACC,cAAe,CAAE,MAAO,GAAI,SAAU,EAAG,EACzC,iBAAAT,EACA,SAAUG,EAET,SAAA,CAAC,CAAE,aAAAO,CACF,IAAAC,EAAA,KAACC,GAAK,UAAWC,EAAI,KAAM,aAAa,MACtC,SAAA,CAAAL,EAAA,IAAC,QAAM,CAAA,UAAWK,EAAI,MAAO,SAAK,QAAA,EACjCL,EAAA,IAAAM,EAAA,CAAM,KAAK,QAAQ,KAAK,QAAQ,EACjCN,MAACO,GAAa,KAAK,QAAQ,UAAU,MAAM,UAAWF,EAAI,MAAO,EAEhEL,EAAA,IAAA,QAAA,CAAM,UAAWK,EAAI,MAAO,SAAS,YAAA,EACrCL,EAAA,IAAAM,EAAA,CAAM,KAAK,WAAW,KAAK,WAAW,EACvCN,MAACO,GAAa,KAAK,WAAW,UAAU,MAAM,UAAWF,EAAI,MAAO,EAEpEL,EAAAA,IAAC,UAAO,KAAK,SAAS,SAAUE,EAAc,UAAWG,EAAI,OAAQ,SAErE,QAAA,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAEJ,EC/CA,SAAwBG,GAAY,CAClC,OAEIL,EAAA,KAAAM,WAAA,CAAA,SAAA,CAAAT,EAAA,IAAC,QAAM,CAAA,UAAWK,EAAI,MAAO,SAAK,QAAA,QACjChB,EAAU,CAAA,CAAA,CAAA,EACb,CAEJ"}